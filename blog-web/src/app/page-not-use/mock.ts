export const articleList = [
  {
    id: 1,
    title: "测试文章1,加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的,加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 2,
    title: "测试文章2",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 3,
    title: "测试文章3",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 4,
    title: "测试文章4",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 5,
    title: "测试文章5",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 6,
    title: "测试文章6",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 7,
    title: "测试文章7",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
  {
    id: 8,
    title: "测试文章8",
    date: "2023-09-22 00:26:00",
    content: `请注意，在前面的示例"/me.png"中，为远程图像提供了部分 URL ( )。由于加载程序架构，这是可能的。

加载程序是为您的图像生成 URL 的函数。它修改提供的src，并生成多个 URL 来请求不同大小的图像。这些多个 URL 用于自动srcset生成，以便为您网站的访问者提供适合其视口大小的图像。

Next.js 应用程序的默认加载程序使用内置的图像优化 API，该 API 可以优化来自 Web 上任何位置的图像，然后直接从 Next.js Web 服务器提供它们。如果您想直接从 CDN 或图像服务器提供图像，您可以使用几行 JavaScript 编写自己的加载器函数。`,
  },
];
