generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Article {
  id              Int          @id @default(autoincrement()) @db.UnsignedInt
  title           String       @db.VarChar(100)
  description     String?      @db.LongText
  cover_image_url String?      @default("") @db.VarChar(255)
  content         String?      @db.LongText
  created_at      DateTime?    @default(now()) @db.DateTime(0)
  modified_at     DateTime?    @default(now()) @db.DateTime(0)
  published       Boolean      @default(false)
  tags            ArticleTag[]

  @@map("article")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ArticleTag {
  article_id Int     @db.UnsignedInt
  tag_id     Int     @db.UnsignedInt
  article    Article @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_tag_ibfk_1")
  tag        Tag     @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_tag_ibfk_2")

  @@id([article_id, tag_id])
  @@index([tag_id], map: "tag_id")
  @@map("article_tag")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Tag {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String       @db.VarChar(100)
  article_tag ArticleTag[]

  @@map("tag")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  username   String    @db.VarChar(100)
  password   String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.DateTime(0)

  @@map("user")
}
